开启
	进去E：
	到dev下
	进去development 
	vagrant up
创建新项目：
	先进去虚拟机-》vagrant ssh
	然后进去虚拟主机  cd /xcdata/server/nginx/conf/vhosts/
	创建配置文件 cp 已有的.conf  新建的.conf
	vi 新建的.conf 修改端口和目录文件
	重启服务  sudo service nginx restart

	ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDUrnx0Wg9pnJHh7K53kfdm1zXnuVjJ7wBF9taSNSunSENeMbXzO/aK8MVuvAhQyzE96wQtWbnfn5l7txkirCeMCNzLrTdnqTd/Uam54aiB/p8oH9p7gwiyDVLqH3un4PnWAXGAnIUupoK661kH1jjrmr7RNXSC5mGwKOfGjZP/e60Ip9YhvC/VqEtMm+m5N1OhaEEu3JahQR4nPTI3+/esYuUQFoe0yYoXLt9PTsCOkT/LlNIrHbQ36NBYxhRQtQQKsA98zSE/rI+h5ZvPazjdwFNulig1+sWmtA4fa4QtdjMifmha+Necbd5HIHxzQwAck5ZDADqXbvjaH7RgV1rr 409170500@qq.com
	
	
	git
	修改上传文件地址
		 git remote set-url origin +地址
	上传修改时必须进入pull下的文件中
		利用git status查看是否有修改
		git commit 提交
		git push 上传

	在公司服务器上进入虚拟主机时 ssh root@192.168.18.93  密码时xcwl##5656
	修改配置文件 /alidata/server/nginx/conf/vhosts 
	
	120.39.63.129    192.168.18.61  root  xcwl@2017#
	192.168.18.61   root  xcwl@2017#
	
	需要登入才能实现的功能要token
	注册完返token
	
	
	93：mysql  account:192.168.18.93  psw:xcwl2015
	66：mysql  						  psw：xcwl@501qzza
	
	
	安装项目完重启方式
	（docker run -p 863:863 --name fjweb --privileged -v /xcdata/server/nginx/vhost:/xcdata/server/nginx-1.4.4/conf/vhosts -v /xcdata/www:/xcdata/www -d ngpg:20170626）
	
	F:vag/下的vagrant mysql密码是123456
	  配置文件地址：/usr/local/nginx/conf/vhost
	
	git提交新项目
	1.git init
	2.git remote add origin (git 的地址)
	3.git add
	4.git commit
	5.git push origin master
	
	
	
	
	
 

	
	
	
	<option value="<#$v.id#>" <eq name="info.auth_tpl" value="$v.id">selected=""</eq>><#$v.tpname#></option>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	Page({
  data: {
    index: 0,
    multiArray: [[], ['扁性动物', '线形动物', '环节动物', '软体动物', '节肢动物']],
    
    multiIndex: [0, 0, 0],
    detail:1,
    dev:[],
  },
  bindMultiPickerColumnChange: function (e) {
    var that=this;
    
    var data = {
      multiArray: this.data.multiArray,
      multiIndex: this.data.multiIndex
    };
    data.multiIndex[e.detail.column] = e.detail.value;
    if (e.detail.column==0){
      switch (e.detail.value) {
        case 0:
          var dev1 = []; console.log(dev1);
          console.log(that.data.detail);
          for (var a = 0; a < that.data.detail[e.detail.value].length; a++) {
            dev1.push(that.data.detail[e.detail.value][0].name)
          }
          data.multiArray[1] = dev1;
          console.log(dev1);
          break;
        case 1:
          data.multiArray[1] = ['扁性动物', '线形动物', '环节动物', '软体动物', '节肢动物'];
          break;
      }
      this.setData(data);
    }
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    var that=this;
    wx.request({
      url: 'https://sps.wifiadv.com/Home/Index/Detail',
      method:"post",
      data: {
        uid: 2,
      },
      header: {
        'content-type': 'application/json' // 默认值
      },
      success: function (res) {
        var device=[];var detail1=[];
        for (var i = 0; i < res.data.data.devicetype.length;i++){
          device.push(res.data.data.devicetype[i].type);
          detail1.push(res.data.data.devicetype[i].detail);
        }
        // var dev = [];
        // console.log(res.data.data.devicetype[0].detail.length);
        // for (var a = 0; a < res.data.data.devicetype[0].detail.length; a++) {
        //   dev.push(res.data.data.devicetype[0].detail[a].name)
        // }
        that.setData({
          multiArray: [device, ['扁性动物1', '线形动物', '环节动物', '软体动物', '节肢动物']],
          detail: detail1,
        })
      }
    })
  },
})